import pandas as pd
import numpy as np
import streamlit as st
from sklearn.metrics.pairwise import cosine_similarity

# –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
@st.cache
def load_data():
    df = pd.read_csv('lastfm_data.csv')  # –ó–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É
    return df

df = load_data()

# –ü—Ä–µ–¥–æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö
def preprocess_data(df):
    # –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –≤—Å–µ –ø–µ—Å–Ω–∏ –∏–º–µ—é—Ç —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏–º—è
    df = df.dropna(subset=['song'])
    return df

df = preprocess_data(df)

# –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø–æ—Ö–æ–∂–µ—Å—Ç–∏ –ø–µ—Å–µ–Ω
def get_similar_songs(song_name, n=10):
    song_index = df[df['song'] == song_name].index[0]
    song_features = df.iloc[:, 2:].values  # –î–æ–ø—É—Å—Ç–∏–º, –ø–æ—Å–ª–µ –≤—Ç–æ—Ä–æ–≥–æ —Å—Ç–æ–ª–±—Ü–∞ –∏–¥—É—Ç –ø—Ä–∏–∑–Ω–∞–∫–∏
    similarity_scores = cosine_similarity([song_features[song_index]], song_features)
    similar_songs = similarity_scores.argsort()[0][::-1][1:n+1]
    return df.iloc[similar_songs]['song'].tolist()

# –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å Streamlit
st.title("üé∂ Music Recommendation System")

song_name = st.text_input("Enter a song name:")
if st.button("Recommend"):
    if song_name:
        recommendations = get_similar_songs(song_name)
        st.write(f"Recommendations based on '{song_name}':")
        for song in recommendations:
            st.write(song)
    else:
        st.write("Please enter a song name.")
